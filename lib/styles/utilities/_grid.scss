@import '../variables/grid';

.uw-grid {
  @include grid();
}

/**
 * With multiple was to define a column size and the possibility that multiple
 * column classes are applied to a single element it can be confusing which
 * classes will take precedence over other classes. The column precedence rules
 * are as follows:
 *
 * 1. Use breakpoint classes sorted from largest breakpoint to smallest
 *    breakpoint. Ignore any breakpoint classes that don't apply to the current
 *    screen size.
 *
 * 2. Use span classes sorted from largest span to smallest span.
 *
 * 3. If rules 1 and 2 failed to find a class, default to treating the element
 *    as a basic column (same as having the class `.uw-col`).
 */

%column {
  @include column();
}

// Column precedence rule 3
.uw-col {
  @extend %column;
}

// Column precedence rule 3 (treat breakpoints that don't match the current
// screen size as `.uw-col`)
@each $breakpoint-token in map-keys($breakpoints) {
  @for $span from 1 through $grid-columns {
    .uw-col-#{$span}-#{$breakpoint-token} {
      @extend %column;
    }
  }
}

// Column precedence rule 2
@for $span from 1 through $grid-columns {
  .uw-col-#{$span} {
    @include column($span);
  }
}

// Column precedence rule 1
@each $breakpoint-token in map-keys($breakpoints) {
  @include screen-wider-than($breakpoint-token) {
    @for $span from 1 through $grid-columns {
      .uw-col-#{$span}-#{$breakpoint-token} {
        @include column($span);
      }
    }
  }
}
