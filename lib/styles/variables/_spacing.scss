$spacing-unit: 0.5rem;

$spacing-tokens: 0, 1, 2, 3, 4, 5, 6;

@function spacing-units($mult: 1) {
  @return $spacing-unit * $mult;
}

$spacing-token-values: (
  0: spacing-units(0),
  1: spacing-units(1),
  2: spacing-units(2),
  3: spacing-units(3),
  4: spacing-units(4),
  5: spacing-units(5),
  6: spacing-units(6)
);

$spacing-properties: (margin, padding);

$spacing-directions: (all, x, y, top, right, bottom, left);

@mixin spacing($property, $direction, $token) {
  @if index($spacing-properties, $property) == null {
    @error "no spacing property: '#{$property}'";
  } @else if index($spacing-directions, $direction) == null {
    @error "no spacing direction: '#{$direction}'";
  } @else if index($spacing-tokens, $token) == null {
    @error "no spacing token: '#{$token}'";
  }

  $value: map-get($spacing-token-values, $token);

  @if $direction == all {
    #{$property}: $value;
  } @else if $direction == x {
    #{$property}-left: $value;
    #{$property}-right: $value;
  } @else if $direction == y {
    #{$property}-top: $value;
    #{$property}-bottom: $value;
  } @else {
    #{$property}-#{$direction}: $value;
  }
}

@mixin margin($direction, $token) {
  @include spacing(margin, $direction, $token);
}

@mixin padding($direction, $token) {
  @include spacing(padding, $direction, $token);
}
